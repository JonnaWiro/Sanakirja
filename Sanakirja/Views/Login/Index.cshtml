@model Sanakirja.Models.Login

@{
    ViewBag.Title = "Login";
}

@*<h2>Login</h2>*@

@using (Html.BeginForm("Authorize", "Login", FormMethod.Post))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>Login</h4>
    <hr />

    <!-- Näytä uloskirjautumisviesti, jos se on olemassa -->
    @if (!string.IsNullOrEmpty(ViewBag.LoggedOutMessage as string))
    {
        <div class="alert alert-success">
            @ViewBag.LoggedOutMessage
        </div>
    }

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.LoginId)
    <div class="form-group">
        @Html.LabelFor(model => model.Kayttajatunnus, "Käyttäjänimi", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Kayttajatunnus, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Kayttajatunnus, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Salasana, "Salasana", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Salasana, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Salasana, "", new { @class = "text-danger" })
        </div>
    </div>
    <label class="text-danger">
        @Html.DisplayFor(model => model.LoginErrorMessage)
    </label>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Log" class="btn btn-success" />
        </div>
    </div>
</div>
}
